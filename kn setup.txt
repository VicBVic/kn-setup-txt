# python3-toml is required to build translation blobs on instance start
# mold is a faster linker that is used by the c/c++ compilers on the platform
$ sudo apt install build-essential mold git golang python3-dev python3-pip python-is-python3 python3-toml 

# The current latest version is 1.22.0, but newer releases might have been released. Check here to see the latest version: https://go.dev/dl/
$ go install golang.org/dl/go1.22.0@latest
$ go1.22.0 download

# [...]
go1.22.0 build -v ./cmd/kn || exit 2
# [...]

$ sudo sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list'
$ wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo tee /etc/apt/trusted.gpg.d/psql.asc
$ sudo apt update && sudo apt install -y postgresql-16

$ sudo su - postgres
$ createuser alexv -sP
Password: <insert new user password>
$ createdb kilonova -O alexv
$ exit


# ....
# "local" is for Unix domain socket connections only
local   all             all                                     md5
# ....


$ curl -SLO https://deb.nodesource.com/nsolid_setup_deb.sh && chmod +x nsolid_setup_deb.sh &&\
		sudo ./nsolid_setup_deb.sh 21 && sudo apt install nodejs
$ sudo npm install --global yarn # The npm setup script globally saves node_modules... we need to run as sudo




$ curl -SLO https://deb.nodesource.com/nsolid_setup_deb.sh && chmod +x nsolid_setup_deb.sh &&\
		sudo ./nsolid_setup_deb.sh 21 && sudo apt install nodejs
$ sudo npm install --global yarn # The npm setup script globally saves node_modules... we need to run as sudo



$ yarn --cwd ./web/assets install # set up node_modules, we will copy the KaTeX JavaScript using ./scripts/init_katex.sh later
$ # Generate the translation files. Otherwise, prodJS will fail because it doesn't know what ./_translations.json is
$ python ./scripts/toml_gen.py
$ ./scripts/init_katex.sh
$ cd ./web/assets/
$ yarn prodJS # bundle custom functions
$ yarn prodCSS # build styles
$ yarn vendor # bundle libraries used directly from html


sudo apt install linux-generic-hwe-22.04
sudo reboot # Reboot is required


sudo apt install libcap-dev libsystemd-dev


[common]
 log_dir = "/home/alexv/src/kninfo/logs"
 data_dir = "/home/alexv/src/kninfo/data"
 debug = false # true if you want more debug output, usually from the grader.
 host_prefix = "http://localhost:8070" # Note that it must be without an ending backslash!
 port = 8070
 default_language = "ro"
 db_dsn = "sslmode=disable host=/var/run/postgresql dbname=kilonova user=<YOUR USERNAME> password=<YOUR PSQL PASSWORD> application_name=kilonova"
 test_max_mem_kb = 1048576 # 1gb limit for setting up tests

[eval]
 isolatePath = "/usr/local/bin/isolate" # for cg2 isolate, for cg1: "/usr/local/etc/isolate_bin"
 compilePath = "/tmp/kncompiles"
 num_concurrent = 3
 global_max_mem_kb = 1048576 # 1gb global memory limit
 starting_box = 1 # If there are multiple kilonova instances active on the system, change to a multiple of 100, just to be safe

[email]
 enabled = true # set to false if you don't want to setup the mailer service.
 host = "smtp.fastmail.com:587"
 username = "<SMTP USERNAME>"
 password = "<SMTP PASSWORD>"

[frontend]
 banned_hot_problems = [] # This is used to hide some problems from the trending menu on the front page
 
[donations]
 buy_coffee_name = "" # Name to buymeacoffee campaign
 bmac_webhook_secret = "" # Secret for BuyMeACoffee webhook, used to forward donations to updates webhook
 paypal_button_id = "" # Button ID for paypal donations
